{
  "manifestVersion": "3.2",
  "admin": {
    "address": "0x919AEd466F30A821670b12aaab3A4102d8536486",
    "txHash": "0xd3ca4369343926c2f6102418f0da39397196620bf1b468d0935ed9f3c50ed0a3"
  },
  "proxies": [
    {
      "address": "0x1C795d4AEf47BBbf0698471A3b04D51b2BFac893",
      "txHash": "0xff13f31711b9ec5b33bfea6d5a9abcc9f248d846e0fd6dda07127f6e8dadc27f",
      "kind": "transparent"
    },
    {
      "address": "0x835358A17af52Dd87341c121bEEcE61A6BA78473",
      "txHash": "0xa0c040d9d1515a07509f1194002581375053f5af95f183fedb8b86adc9ddd76c",
      "kind": "transparent"
    }
  ],
  "impls": {
    "52da57898169fc49740f8035b6941840ec0b0ebe0947be0c6ec759a4d64b2768": {
      "address": "0x078481F4123A79b398D12c7DEa2B75023736e882",
      "txHash": "0x8ac7c490d5d1af71fd007e9b1b9288ca54b1ba1d22f3e168e6ee97fd05510fa9",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:259"
          },
          {
            "contract": "TimelockControllerUpgradeable",
            "label": "_timestamps",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "src": "../@openzeppelin/contracts-upgradeable/governance/TimelockControllerUpgradeable.sol:34"
          },
          {
            "contract": "TimelockControllerUpgradeable",
            "label": "_minDelay",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-upgradeable/governance/TimelockControllerUpgradeable.sol:35"
          },
          {
            "contract": "TimelockControllerUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)48_storage",
            "src": "../@openzeppelin/contracts-upgradeable/governance/TimelockControllerUpgradeable.sol:432"
          }
        ],
        "types": {
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          }
        }
      }
    },
    "aa55ca561fdf0bce1cc257642d1e6750c333b97d2c92af537d9272c83d06a829": {
      "address": "0x8d9227cCAe454090A6204A62989AFbd11BBb40b9",
      "txHash": "0x0b73c43b9733b01c49f97edc02e4eab2c325bc7d75f5c841d12df6b55e2bccb0",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "contract": "EIP712Upgradeable",
            "label": "_HASHED_NAME",
            "type": "t_bytes32",
            "src": "../@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:32"
          },
          {
            "contract": "EIP712Upgradeable",
            "label": "_HASHED_VERSION",
            "type": "t_bytes32",
            "src": "../@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:33"
          },
          {
            "contract": "EIP712Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:120"
          },
          {
            "contract": "IGovernorUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/governance/IGovernorUpgradeable.sol:288"
          },
          {
            "contract": "IGovernorTimelockUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/governance/extensions/IGovernorTimelockUpgradeable.sol:38"
          },
          {
            "contract": "IGovernorCompatibilityBravoUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/governance/compatibility/IGovernorCompatibilityBravoUpgradeable.sol:126"
          },
          {
            "contract": "GovernorUpgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/governance/GovernorUpgradeable.sol:46"
          },
          {
            "contract": "GovernorUpgradeable",
            "label": "_proposals",
            "type": "t_mapping(t_uint256,t_struct(ProposalCore)473_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/governance/GovernorUpgradeable.sol:48"
          },
          {
            "contract": "GovernorUpgradeable",
            "label": "_governanceCall",
            "type": "t_struct(Bytes32Deque)9017_storage",
            "src": "../@openzeppelin/contracts-upgradeable/governance/GovernorUpgradeable.sol:54"
          },
          {
            "contract": "GovernorUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)46_storage",
            "src": "../@openzeppelin/contracts-upgradeable/governance/GovernorUpgradeable.sol:608"
          },
          {
            "contract": "GovernorCompatibilityBravoUpgradeable",
            "label": "_proposalDetails",
            "type": "t_mapping(t_uint256,t_struct(ProposalDetails)3053_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/governance/compatibility/GovernorCompatibilityBravoUpgradeable.sol:51"
          },
          {
            "contract": "GovernorCompatibilityBravoUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/governance/compatibility/GovernorCompatibilityBravoUpgradeable.sol:301"
          },
          {
            "contract": "GovernorVotesUpgradeable",
            "label": "token",
            "type": "t_contract(IVotesUpgradeable)4787",
            "src": "../@openzeppelin/contracts-upgradeable/governance/extensions/GovernorVotesUpgradeable.sol:18"
          },
          {
            "contract": "GovernorVotesUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/governance/extensions/GovernorVotesUpgradeable.sol:44"
          },
          {
            "contract": "GovernorVotesQuorumFractionUpgradeable",
            "label": "_quorumNumerator",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-upgradeable/governance/extensions/GovernorVotesQuorumFractionUpgradeable.sol:20"
          },
          {
            "contract": "GovernorVotesQuorumFractionUpgradeable",
            "label": "_quorumNumeratorHistory",
            "type": "t_struct(History)5255_storage",
            "src": "../@openzeppelin/contracts-upgradeable/governance/extensions/GovernorVotesQuorumFractionUpgradeable.sol:21"
          },
          {
            "contract": "GovernorVotesQuorumFractionUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)48_storage",
            "src": "../@openzeppelin/contracts-upgradeable/governance/extensions/GovernorVotesQuorumFractionUpgradeable.sol:130"
          },
          {
            "contract": "GovernorTimelockControlUpgradeable",
            "label": "_timelock",
            "type": "t_contract(TimelockControllerUpgradeable)2984",
            "src": "../@openzeppelin/contracts-upgradeable/governance/extensions/GovernorTimelockControlUpgradeable.sol:28"
          },
          {
            "contract": "GovernorTimelockControlUpgradeable",
            "label": "_timelockIds",
            "type": "t_mapping(t_uint256,t_bytes32)",
            "src": "../@openzeppelin/contracts-upgradeable/governance/extensions/GovernorTimelockControlUpgradeable.sol:29"
          },
          {
            "contract": "GovernorTimelockControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)48_storage",
            "src": "../@openzeppelin/contracts-upgradeable/governance/extensions/GovernorTimelockControlUpgradeable.sol:177"
          }
        ],
        "types": {
          "t_contract(TimelockControllerUpgradeable)2984": {
            "label": "contract TimelockControllerUpgradeable"
          },
          "t_mapping(t_uint256,t_bytes32)": {
            "label": "mapping(uint256 => bytes32)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]"
          },
          "t_struct(History)5255_storage": {
            "label": "struct CheckpointsUpgradeable.History",
            "members": [
              {
                "label": "_checkpoints",
                "type": "t_array(t_struct(Checkpoint)5250_storage)dyn_storage"
              }
            ]
          },
          "t_array(t_struct(Checkpoint)5250_storage)dyn_storage": {
            "label": "struct CheckpointsUpgradeable.Checkpoint[]"
          },
          "t_struct(Checkpoint)5250_storage": {
            "label": "struct CheckpointsUpgradeable.Checkpoint",
            "members": [
              {
                "label": "_blockNumber",
                "type": "t_uint32"
              },
              {
                "label": "_value",
                "type": "t_uint224"
              }
            ]
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_uint224": {
            "label": "uint224"
          },
          "t_contract(IVotesUpgradeable)4787": {
            "label": "contract IVotesUpgradeable"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_uint256,t_struct(ProposalDetails)3053_storage)": {
            "label": "mapping(uint256 => struct GovernorCompatibilityBravoUpgradeable.ProposalDetails)"
          },
          "t_struct(ProposalDetails)3053_storage": {
            "label": "struct GovernorCompatibilityBravoUpgradeable.ProposalDetails",
            "members": [
              {
                "label": "proposer",
                "type": "t_address"
              },
              {
                "label": "targets",
                "type": "t_array(t_address)dyn_storage"
              },
              {
                "label": "values",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "signatures",
                "type": "t_array(t_string_storage)dyn_storage"
              },
              {
                "label": "calldatas",
                "type": "t_array(t_bytes_storage)dyn_storage"
              },
              {
                "label": "forVotes",
                "type": "t_uint256"
              },
              {
                "label": "againstVotes",
                "type": "t_uint256"
              },
              {
                "label": "abstainVotes",
                "type": "t_uint256"
              },
              {
                "label": "receipts",
                "type": "t_mapping(t_address,t_struct(Receipt)3853_storage)"
              },
              {
                "label": "descriptionHash",
                "type": "t_bytes32"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_array(t_string_storage)dyn_storage": {
            "label": "string[]"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_bytes_storage)dyn_storage": {
            "label": "bytes[]"
          },
          "t_bytes_storage": {
            "label": "bytes"
          },
          "t_mapping(t_address,t_struct(Receipt)3853_storage)": {
            "label": "mapping(address => struct IGovernorCompatibilityBravoUpgradeable.Receipt)"
          },
          "t_struct(Receipt)3853_storage": {
            "label": "struct IGovernorCompatibilityBravoUpgradeable.Receipt",
            "members": [
              {
                "label": "hasVoted",
                "type": "t_bool"
              },
              {
                "label": "support",
                "type": "t_uint8"
              },
              {
                "label": "votes",
                "type": "t_uint96"
              }
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_uint96": {
            "label": "uint96"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_uint256,t_struct(ProposalCore)473_storage)": {
            "label": "mapping(uint256 => struct GovernorUpgradeable.ProposalCore)"
          },
          "t_struct(ProposalCore)473_storage": {
            "label": "struct GovernorUpgradeable.ProposalCore",
            "members": [
              {
                "label": "voteStart",
                "type": "t_struct(BlockNumber)5927_storage"
              },
              {
                "label": "voteEnd",
                "type": "t_struct(BlockNumber)5927_storage"
              },
              {
                "label": "executed",
                "type": "t_bool"
              },
              {
                "label": "canceled",
                "type": "t_bool"
              }
            ]
          },
          "t_struct(BlockNumber)5927_storage": {
            "label": "struct TimersUpgradeable.BlockNumber",
            "members": [
              {
                "label": "_deadline",
                "type": "t_uint64"
              }
            ]
          },
          "t_uint64": {
            "label": "uint64"
          },
          "t_struct(Bytes32Deque)9017_storage": {
            "label": "struct DoubleEndedQueueUpgradeable.Bytes32Deque",
            "members": [
              {
                "label": "_begin",
                "type": "t_int128"
              },
              {
                "label": "_end",
                "type": "t_int128"
              },
              {
                "label": "_data",
                "type": "t_mapping(t_int128,t_bytes32)"
              }
            ]
          },
          "t_int128": {
            "label": "int128"
          },
          "t_mapping(t_int128,t_bytes32)": {
            "label": "mapping(int128 => bytes32)"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]"
          }
        }
      }
    },
    "00db6917558d2375e8b2711f0522d649d2dcbf594086615d847b5bd15380c4cd": {
      "address": "0x986b643a3276d7Cd6e26a341E40b81aBa4c71044",
      "txHash": "0xcced43697adeffda760e1b218ac7bf6d89b56c88269e122f7302d2c319d3ecff",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "contract": "EIP712Upgradeable",
            "label": "_HASHED_NAME",
            "type": "t_bytes32",
            "src": "../@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:32"
          },
          {
            "contract": "EIP712Upgradeable",
            "label": "_HASHED_VERSION",
            "type": "t_bytes32",
            "src": "../@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:33"
          },
          {
            "contract": "EIP712Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:120"
          },
          {
            "contract": "IGovernorUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/governance/IGovernorUpgradeable.sol:288"
          },
          {
            "contract": "IGovernorTimelockUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/governance/extensions/IGovernorTimelockUpgradeable.sol:38"
          },
          {
            "contract": "IGovernorCompatibilityBravoUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/governance/compatibility/IGovernorCompatibilityBravoUpgradeable.sol:126"
          },
          {
            "contract": "GovernorUpgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/governance/GovernorUpgradeable.sol:46"
          },
          {
            "contract": "GovernorUpgradeable",
            "label": "_proposals",
            "type": "t_mapping(t_uint256,t_struct(ProposalCore)473_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/governance/GovernorUpgradeable.sol:48"
          },
          {
            "contract": "GovernorUpgradeable",
            "label": "_governanceCall",
            "type": "t_struct(Bytes32Deque)9017_storage",
            "src": "../@openzeppelin/contracts-upgradeable/governance/GovernorUpgradeable.sol:54"
          },
          {
            "contract": "GovernorUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)46_storage",
            "src": "../@openzeppelin/contracts-upgradeable/governance/GovernorUpgradeable.sol:608"
          },
          {
            "contract": "GovernorCompatibilityBravoUpgradeable",
            "label": "_proposalDetails",
            "type": "t_mapping(t_uint256,t_struct(ProposalDetails)3053_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/governance/compatibility/GovernorCompatibilityBravoUpgradeable.sol:51"
          },
          {
            "contract": "GovernorCompatibilityBravoUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/governance/compatibility/GovernorCompatibilityBravoUpgradeable.sol:301"
          },
          {
            "contract": "GovernorVotesUpgradeable",
            "label": "token",
            "type": "t_contract(IVotesUpgradeable)4787",
            "src": "../@openzeppelin/contracts-upgradeable/governance/extensions/GovernorVotesUpgradeable.sol:18"
          },
          {
            "contract": "GovernorVotesUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/governance/extensions/GovernorVotesUpgradeable.sol:44"
          },
          {
            "contract": "GovernorVotesQuorumFractionUpgradeable",
            "label": "_quorumNumerator",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-upgradeable/governance/extensions/GovernorVotesQuorumFractionUpgradeable.sol:20"
          },
          {
            "contract": "GovernorVotesQuorumFractionUpgradeable",
            "label": "_quorumNumeratorHistory",
            "type": "t_struct(History)5255_storage",
            "src": "../@openzeppelin/contracts-upgradeable/governance/extensions/GovernorVotesQuorumFractionUpgradeable.sol:21"
          },
          {
            "contract": "GovernorVotesQuorumFractionUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)48_storage",
            "src": "../@openzeppelin/contracts-upgradeable/governance/extensions/GovernorVotesQuorumFractionUpgradeable.sol:130"
          },
          {
            "contract": "GovernorTimelockControlUpgradeable",
            "label": "_timelock",
            "type": "t_contract(TimelockControllerUpgradeable)2984",
            "src": "../@openzeppelin/contracts-upgradeable/governance/extensions/GovernorTimelockControlUpgradeable.sol:28"
          },
          {
            "contract": "GovernorTimelockControlUpgradeable",
            "label": "_timelockIds",
            "type": "t_mapping(t_uint256,t_bytes32)",
            "src": "../@openzeppelin/contracts-upgradeable/governance/extensions/GovernorTimelockControlUpgradeable.sol:29"
          },
          {
            "contract": "GovernorTimelockControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)48_storage",
            "src": "../@openzeppelin/contracts-upgradeable/governance/extensions/GovernorTimelockControlUpgradeable.sol:177"
          }
        ],
        "types": {
          "t_contract(TimelockControllerUpgradeable)2984": {
            "label": "contract TimelockControllerUpgradeable"
          },
          "t_mapping(t_uint256,t_bytes32)": {
            "label": "mapping(uint256 => bytes32)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]"
          },
          "t_struct(History)5255_storage": {
            "label": "struct CheckpointsUpgradeable.History",
            "members": [
              {
                "label": "_checkpoints",
                "type": "t_array(t_struct(Checkpoint)5250_storage)dyn_storage"
              }
            ]
          },
          "t_array(t_struct(Checkpoint)5250_storage)dyn_storage": {
            "label": "struct CheckpointsUpgradeable.Checkpoint[]"
          },
          "t_struct(Checkpoint)5250_storage": {
            "label": "struct CheckpointsUpgradeable.Checkpoint",
            "members": [
              {
                "label": "_blockNumber",
                "type": "t_uint32"
              },
              {
                "label": "_value",
                "type": "t_uint224"
              }
            ]
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_uint224": {
            "label": "uint224"
          },
          "t_contract(IVotesUpgradeable)4787": {
            "label": "contract IVotesUpgradeable"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_uint256,t_struct(ProposalDetails)3053_storage)": {
            "label": "mapping(uint256 => struct GovernorCompatibilityBravoUpgradeable.ProposalDetails)"
          },
          "t_struct(ProposalDetails)3053_storage": {
            "label": "struct GovernorCompatibilityBravoUpgradeable.ProposalDetails",
            "members": [
              {
                "label": "proposer",
                "type": "t_address"
              },
              {
                "label": "targets",
                "type": "t_array(t_address)dyn_storage"
              },
              {
                "label": "values",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "signatures",
                "type": "t_array(t_string_storage)dyn_storage"
              },
              {
                "label": "calldatas",
                "type": "t_array(t_bytes_storage)dyn_storage"
              },
              {
                "label": "forVotes",
                "type": "t_uint256"
              },
              {
                "label": "againstVotes",
                "type": "t_uint256"
              },
              {
                "label": "abstainVotes",
                "type": "t_uint256"
              },
              {
                "label": "receipts",
                "type": "t_mapping(t_address,t_struct(Receipt)3853_storage)"
              },
              {
                "label": "descriptionHash",
                "type": "t_bytes32"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_array(t_string_storage)dyn_storage": {
            "label": "string[]"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_bytes_storage)dyn_storage": {
            "label": "bytes[]"
          },
          "t_bytes_storage": {
            "label": "bytes"
          },
          "t_mapping(t_address,t_struct(Receipt)3853_storage)": {
            "label": "mapping(address => struct IGovernorCompatibilityBravoUpgradeable.Receipt)"
          },
          "t_struct(Receipt)3853_storage": {
            "label": "struct IGovernorCompatibilityBravoUpgradeable.Receipt",
            "members": [
              {
                "label": "hasVoted",
                "type": "t_bool"
              },
              {
                "label": "support",
                "type": "t_uint8"
              },
              {
                "label": "votes",
                "type": "t_uint96"
              }
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_uint96": {
            "label": "uint96"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_uint256,t_struct(ProposalCore)473_storage)": {
            "label": "mapping(uint256 => struct GovernorUpgradeable.ProposalCore)"
          },
          "t_struct(ProposalCore)473_storage": {
            "label": "struct GovernorUpgradeable.ProposalCore",
            "members": [
              {
                "label": "voteStart",
                "type": "t_struct(BlockNumber)5927_storage"
              },
              {
                "label": "voteEnd",
                "type": "t_struct(BlockNumber)5927_storage"
              },
              {
                "label": "executed",
                "type": "t_bool"
              },
              {
                "label": "canceled",
                "type": "t_bool"
              }
            ]
          },
          "t_struct(BlockNumber)5927_storage": {
            "label": "struct TimersUpgradeable.BlockNumber",
            "members": [
              {
                "label": "_deadline",
                "type": "t_uint64"
              }
            ]
          },
          "t_uint64": {
            "label": "uint64"
          },
          "t_struct(Bytes32Deque)9017_storage": {
            "label": "struct DoubleEndedQueueUpgradeable.Bytes32Deque",
            "members": [
              {
                "label": "_begin",
                "type": "t_int128"
              },
              {
                "label": "_end",
                "type": "t_int128"
              },
              {
                "label": "_data",
                "type": "t_mapping(t_int128,t_bytes32)"
              }
            ]
          },
          "t_int128": {
            "label": "int128"
          },
          "t_mapping(t_int128,t_bytes32)": {
            "label": "mapping(int128 => bytes32)"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]"
          }
        }
      }
    },
    "2b7dd249b2da19a910c1dc0ef3a56995870361bb25a41a038b33a465e5f23c1e": {
      "address": "0x1dE95Cde9f3CA823c5fbfc57538cd6C2B2090813",
      "txHash": "0x7e3d6887b06dc2a6cd847ce64004005165997c6ba413ed8df9192ca22923bb3d",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "contract": "EIP712Upgradeable",
            "label": "_HASHED_NAME",
            "type": "t_bytes32",
            "src": "../@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:32"
          },
          {
            "contract": "EIP712Upgradeable",
            "label": "_HASHED_VERSION",
            "type": "t_bytes32",
            "src": "../@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:33"
          },
          {
            "contract": "EIP712Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/cryptography/draft-EIP712Upgradeable.sol:120"
          },
          {
            "contract": "IGovernorUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/governance/IGovernorUpgradeable.sol:288"
          },
          {
            "contract": "IGovernorTimelockUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/governance/extensions/IGovernorTimelockUpgradeable.sol:38"
          },
          {
            "contract": "IGovernorCompatibilityBravoUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/governance/compatibility/IGovernorCompatibilityBravoUpgradeable.sol:126"
          },
          {
            "contract": "GovernorUpgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/governance/GovernorUpgradeable.sol:46"
          },
          {
            "contract": "GovernorUpgradeable",
            "label": "_proposals",
            "type": "t_mapping(t_uint256,t_struct(ProposalCore)473_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/governance/GovernorUpgradeable.sol:48"
          },
          {
            "contract": "GovernorUpgradeable",
            "label": "_governanceCall",
            "type": "t_struct(Bytes32Deque)9017_storage",
            "src": "../@openzeppelin/contracts-upgradeable/governance/GovernorUpgradeable.sol:54"
          },
          {
            "contract": "GovernorUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)46_storage",
            "src": "../@openzeppelin/contracts-upgradeable/governance/GovernorUpgradeable.sol:608"
          },
          {
            "contract": "GovernorCompatibilityBravoUpgradeable",
            "label": "_proposalDetails",
            "type": "t_mapping(t_uint256,t_struct(ProposalDetails)3053_storage)",
            "src": "../@openzeppelin/contracts-upgradeable/governance/compatibility/GovernorCompatibilityBravoUpgradeable.sol:51"
          },
          {
            "contract": "GovernorCompatibilityBravoUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "../@openzeppelin/contracts-upgradeable/governance/compatibility/GovernorCompatibilityBravoUpgradeable.sol:301"
          },
          {
            "contract": "GovernorVotesUpgradeable",
            "label": "token",
            "type": "t_contract(IVotesUpgradeable)4787",
            "src": "../@openzeppelin/contracts-upgradeable/governance/extensions/GovernorVotesUpgradeable.sol:18"
          },
          {
            "contract": "GovernorVotesUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/governance/extensions/GovernorVotesUpgradeable.sol:44"
          },
          {
            "contract": "GovernorVotesQuorumFractionUpgradeable",
            "label": "_quorumNumerator",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-upgradeable/governance/extensions/GovernorVotesQuorumFractionUpgradeable.sol:20"
          },
          {
            "contract": "GovernorVotesQuorumFractionUpgradeable",
            "label": "_quorumNumeratorHistory",
            "type": "t_struct(History)5255_storage",
            "src": "../@openzeppelin/contracts-upgradeable/governance/extensions/GovernorVotesQuorumFractionUpgradeable.sol:21"
          },
          {
            "contract": "GovernorVotesQuorumFractionUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)48_storage",
            "src": "../@openzeppelin/contracts-upgradeable/governance/extensions/GovernorVotesQuorumFractionUpgradeable.sol:130"
          },
          {
            "contract": "GovernorTimelockControlUpgradeable",
            "label": "_timelock",
            "type": "t_contract(TimelockControllerUpgradeable)2984",
            "src": "../@openzeppelin/contracts-upgradeable/governance/extensions/GovernorTimelockControlUpgradeable.sol:28"
          },
          {
            "contract": "GovernorTimelockControlUpgradeable",
            "label": "_timelockIds",
            "type": "t_mapping(t_uint256,t_bytes32)",
            "src": "../@openzeppelin/contracts-upgradeable/governance/extensions/GovernorTimelockControlUpgradeable.sol:29"
          },
          {
            "contract": "GovernorTimelockControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)48_storage",
            "src": "../@openzeppelin/contracts-upgradeable/governance/extensions/GovernorTimelockControlUpgradeable.sol:177"
          }
        ],
        "types": {
          "t_contract(TimelockControllerUpgradeable)2984": {
            "label": "contract TimelockControllerUpgradeable"
          },
          "t_mapping(t_uint256,t_bytes32)": {
            "label": "mapping(uint256 => bytes32)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]"
          },
          "t_struct(History)5255_storage": {
            "label": "struct CheckpointsUpgradeable.History",
            "members": [
              {
                "label": "_checkpoints",
                "type": "t_array(t_struct(Checkpoint)5250_storage)dyn_storage"
              }
            ]
          },
          "t_array(t_struct(Checkpoint)5250_storage)dyn_storage": {
            "label": "struct CheckpointsUpgradeable.Checkpoint[]"
          },
          "t_struct(Checkpoint)5250_storage": {
            "label": "struct CheckpointsUpgradeable.Checkpoint",
            "members": [
              {
                "label": "_blockNumber",
                "type": "t_uint32"
              },
              {
                "label": "_value",
                "type": "t_uint224"
              }
            ]
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_uint224": {
            "label": "uint224"
          },
          "t_contract(IVotesUpgradeable)4787": {
            "label": "contract IVotesUpgradeable"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_uint256,t_struct(ProposalDetails)3053_storage)": {
            "label": "mapping(uint256 => struct GovernorCompatibilityBravoUpgradeable.ProposalDetails)"
          },
          "t_struct(ProposalDetails)3053_storage": {
            "label": "struct GovernorCompatibilityBravoUpgradeable.ProposalDetails",
            "members": [
              {
                "label": "proposer",
                "type": "t_address"
              },
              {
                "label": "targets",
                "type": "t_array(t_address)dyn_storage"
              },
              {
                "label": "values",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "signatures",
                "type": "t_array(t_string_storage)dyn_storage"
              },
              {
                "label": "calldatas",
                "type": "t_array(t_bytes_storage)dyn_storage"
              },
              {
                "label": "forVotes",
                "type": "t_uint256"
              },
              {
                "label": "againstVotes",
                "type": "t_uint256"
              },
              {
                "label": "abstainVotes",
                "type": "t_uint256"
              },
              {
                "label": "receipts",
                "type": "t_mapping(t_address,t_struct(Receipt)3853_storage)"
              },
              {
                "label": "descriptionHash",
                "type": "t_bytes32"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_array(t_string_storage)dyn_storage": {
            "label": "string[]"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_bytes_storage)dyn_storage": {
            "label": "bytes[]"
          },
          "t_bytes_storage": {
            "label": "bytes"
          },
          "t_mapping(t_address,t_struct(Receipt)3853_storage)": {
            "label": "mapping(address => struct IGovernorCompatibilityBravoUpgradeable.Receipt)"
          },
          "t_struct(Receipt)3853_storage": {
            "label": "struct IGovernorCompatibilityBravoUpgradeable.Receipt",
            "members": [
              {
                "label": "hasVoted",
                "type": "t_bool"
              },
              {
                "label": "support",
                "type": "t_uint8"
              },
              {
                "label": "votes",
                "type": "t_uint96"
              }
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_uint96": {
            "label": "uint96"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_uint256,t_struct(ProposalCore)473_storage)": {
            "label": "mapping(uint256 => struct GovernorUpgradeable.ProposalCore)"
          },
          "t_struct(ProposalCore)473_storage": {
            "label": "struct GovernorUpgradeable.ProposalCore",
            "members": [
              {
                "label": "voteStart",
                "type": "t_struct(BlockNumber)5927_storage"
              },
              {
                "label": "voteEnd",
                "type": "t_struct(BlockNumber)5927_storage"
              },
              {
                "label": "executed",
                "type": "t_bool"
              },
              {
                "label": "canceled",
                "type": "t_bool"
              }
            ]
          },
          "t_struct(BlockNumber)5927_storage": {
            "label": "struct TimersUpgradeable.BlockNumber",
            "members": [
              {
                "label": "_deadline",
                "type": "t_uint64"
              }
            ]
          },
          "t_uint64": {
            "label": "uint64"
          },
          "t_struct(Bytes32Deque)9017_storage": {
            "label": "struct DoubleEndedQueueUpgradeable.Bytes32Deque",
            "members": [
              {
                "label": "_begin",
                "type": "t_int128"
              },
              {
                "label": "_end",
                "type": "t_int128"
              },
              {
                "label": "_data",
                "type": "t_mapping(t_int128,t_bytes32)"
              }
            ]
          },
          "t_int128": {
            "label": "int128"
          },
          "t_mapping(t_int128,t_bytes32)": {
            "label": "mapping(int128 => bytes32)"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]"
          }
        }
      }
    }
  }
}
